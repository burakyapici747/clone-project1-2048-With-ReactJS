[{"/Users/burakyapici/Desktop/clone-project1-2048/src/index.js":"1","/Users/burakyapici/Desktop/clone-project1-2048/src/App.js":"2","/Users/burakyapici/Desktop/clone-project1-2048/src/components/GameBox.js":"3","/Users/burakyapici/Desktop/clone-project1-2048/src/components/GameRow.js":"4","/Users/burakyapici/Desktop/clone-project1-2048/src/components/GameCell.js":"5","/Users/burakyapici/Desktop/clone-project1-2048/src/components/GameNumber.js":"6"},{"size":218,"mtime":1642608084331,"results":"7","hashOfConfig":"8"},{"size":481,"mtime":1643347001656,"results":"9","hashOfConfig":"8"},{"size":6513,"mtime":1643349199307,"results":"10","hashOfConfig":"8"},{"size":637,"mtime":1643301702675,"results":"11","hashOfConfig":"8"},{"size":269,"mtime":1643301407881,"results":"12","hashOfConfig":"8"},{"size":521,"mtime":1643346901355,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1b7vvqd",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"16"},"/Users/burakyapici/Desktop/clone-project1-2048/src/index.js",[],["31","32"],"/Users/burakyapici/Desktop/clone-project1-2048/src/App.js",[],"/Users/burakyapici/Desktop/clone-project1-2048/src/components/GameBox.js",["33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56"],"import React from \"react\";\nimport GameRow from \"./GameRow\";\nimport GameNumber from \"./GameNumber\";\nexport default class GameBox extends React.Component{\n\n  constructor(props){\n      super(props);\n      this.state = {\n          gameMap: this.props.gameStateMap,\n      }\n      const self = this;\n      window.addEventListener('keydown', function(e){\n        if(e.key == \"ArrowRight\"){\n          self.slipToRight();\n        }else if(e.key == \"ArrowLeft\"){\n          self.slipToLeft();\n        }else if(e.key == \"ArrowUp\"){\n          self.slipToTop();\n        }else if(e.key == \"ArrowDown\"){\n          self.slipToBottom();\n        }\n      });\n      this.createGridCell(2);\n  }\n\n  createGridCell(cellAmount){\n      let newArr = this.state.gameMap;\n      let randomNumbersArr = [];\n      if(this.mapIsEmpty()){\n        for(let i = 1; i <= cellAmount; i++){\n          randomNumbersArr = this.createRandomNumber(0,4);\n          newArr[randomNumbersArr[0][0]][randomNumbersArr[0][1]] = randomNumbersArr[1][0];\n        }\n        console.log(\"calisti\");\n        this.setState({gameMap: newArr,});\n      }\n    }\n  \n  mapIsEmpty(){\n    for(let col = 0; col < this.state.gameMap.length; col++){\n      for(let row = 0; row < this.state.gameMap[col].length; row++){\n        if(this.state.gameMap[col][row] == 0){\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  createRandomNumber(minValue, maxValue){\n    let randomCol = 0, randomRow = 0;\n    let randomNumber = [2, 4];\n    for(;;){\n      randomCol = Math.floor(Math.random() * (maxValue - minValue)) + minValue;\n      randomRow = Math.floor(Math.random() * (maxValue - minValue)) + minValue;\n      if(!this.isSameIndex(randomCol, randomRow)){\n        return [[randomCol, randomRow], [randomNumber[Math.floor(Math.random() * (2 - 0)) + 0]]];\n      }\n    }\n  }\n\n  slipToRight(){\n    let newArr = this.state.gameMap;\n    let buffer = 3;\n    for(let col = 0; col < this.state.gameMap.length; col++){\n      buffer = 3;\n      for(let row = 2; row >= 0; row--){        \n        if(newArr[col][row] != 0){\n          for(let i = row; i < buffer; i++){\n            if(newArr[col][i] == newArr[col][i + 1]){\n              newArr[col][i + 1] = newArr[col][i + 1] + newArr[col][i];\n              newArr[col][i] = 0;\n              buffer--;\n            }else if( ( newArr[col][i] != newArr[col][i + 1] ) && ( newArr[col][i + 1] != 0 ) ){\n              buffer--;\n            }else{\n              newArr[col][i+1] = newArr[col][i];\n              newArr[col][i] = 0;\n              \n            }\n          } \n        }\n      }\n    }\n    this.setState({gameMap:newArr});\n  }\n\n  slipToLeft(){\n    let newArr = this.state.gameMap;\n    let buffer = 0;\n    for(let col = 0; col < this.state.gameMap.length; col++){\n      buffer = 0;\n      for(let row = 0; row <= 3; row++){        \n        if(newArr[col][row] != 0){\n          for(let i = row; i > buffer; i--){\n            if(newArr[col][i] == newArr[col][i - 1]){\n              newArr[col][i - 1] = newArr[col][i - 1] + newArr[col][i];\n              newArr[col][i] = 0;\n              buffer++;\n              this.setState({gameMap:newArr});\n            }else if( ( newArr[col][i] != newArr[col][i - 1] ) && ( newArr[col][i - 1] != 0 ) ){\n              buffer++;\n            }else{\n              newArr[col][i - 1] = newArr[col][i];\n              newArr[col][i] = 0;\n              this.setState({gameMap:newArr});\n            }\n          } \n        }\n      }\n    }\n    this.setState({newArr});\n  }\n\n  slipToTop(){\n    let newArr = this.state.gameMap;\n    let buffer = 0;\n    for(let row = this.state.gameMap.length - 1; row >= 0; row--){\n      buffer = 0;\n      for(let col = 0; col <= this.state.gameMap.length -1; col++){\n        if(newArr[col][row] != 0){\n          for(let i = col; i > buffer; i--){\n            if(newArr[i][row] == newArr[i-1][row]){\n              newArr[i - 1][row] = newArr[i -1][row] + newArr[i][row];\n              newArr[i][row] = 0;\n              buffer++;\n              this.setState({gameMap:newArr});\n            }else if( ( newArr[i][row] != newArr[i-1][row] ) && ( newArr[i-1][row] != 0 ) ){\n              buffer++;\n            }else{\n              newArr[i-1][row] = newArr[i][row];\n              newArr[i][row] = 0;\n              this.setState({gameMap:newArr});\n            }\n          } \n        }\n      }\n    }\n    this.setState({newArr});\n  }\n\n  slipToBottom(){\n    let newArr = this.state.gameMap;\n    let buffer = 3;\n    for(let row = this.state.gameMap.length - 1; row >= 0; row--){\n      buffer = 3;\n      for(let col = this.state.gameMap.length-1; col >= 0; col--){\n        if(newArr[col][row] != 0){\n          for(let i = col; i < buffer; i++){\n            if(newArr[i][row] == newArr[i+1][row]){\n              newArr[i + 1][row] = newArr[i +1][row] + newArr[i][row];\n              newArr[i][row] = 0;\n              buffer--;\n              this.setState({gameMap:newArr});\n            }else if( ( newArr[i][row] != newArr[i+1][row] ) && ( newArr[i+1][row] != 0 ) ){\n              buffer--;\n            }else{\n              newArr[i+1][row] = newArr[i][row];\n              newArr[i][row] = 0;\n              this.setState({gameMap:newArr});\n            }\n          } \n        }\n      }\n    }\n    this.setState({newArr});\n  }\n\n  isSameIndex(col, row){\n    if(this.state.gameMap[col][row] != 0){\n      return true;\n    }else{\n      return false;\n    }\n  }\n  \n  changeStateMap(value, column, row){\n    let newArr = [];\n    for(let col = 0; col < this.state.gameMap.length; col++){\n        for(let row = 0; row < this.state.gameMap[col].length; row++){\n          newArr.push();\n        }\n    }\n    this.setState({\n      gameMap: newArr,\n    });\n  }\n\n  calculateLocation(col, row){\n    return [((col * 106.25) + (col+1) * 15), ((row * 106.25) + (row+1) * 15)];\n  }\n\n  render(){\n    return(\n      <div className=\"gameBox\">\n        {this.state.gameMap.map(\n          (element, index) => {\n            return(\n                <GameRow key={index} id={index} value={element}/>\n            );\n          }\n        )}\n        {this.state.gameMap.map(\n          (colValue, colIndex) => {\n            return this.state.gameMap[colIndex].map(\n              (cellValue, cellIndex) => {\n                if(cellValue != 0){\n                  return(\n                    <GameNumber value={cellValue} key={cellIndex} row={colIndex} col={cellIndex} location={this.calculateLocation}/>\n                  );\n                }\n              }\n            )\n          }\n        )}\n      </div>\n    );\n  }\n}","/Users/burakyapici/Desktop/clone-project1-2048/src/components/GameRow.js",["57"],"import React from \"react\";\nimport GameCell from \"./GameCell\";\n\nexport default class GameRow extends React.Component{\n    constructor(props){\n        super(props);\n    }\n    render(){\n        return(\n            <div className=\"gameRow\" id={this.props.id}>\n                {\n                    this.props.value.map(\n                        (element, index) => {\n                            return(\n                                <GameCell key={index} value={element} id={this.props.id + \"-\" + index}/>\n                            );\n                        }\n                    )\n                }\n            </div>\n        );\n    }\n}","/Users/burakyapici/Desktop/clone-project1-2048/src/components/GameCell.js",["58"],"import React from \"react\";\nimport GameNumber from \"./GameNumber\";\n\nexport default class GameCell extends React.Component{\n    \n    render(){\n        return(\n            <div className=\"gameCell\" id={this.props.id}>\n                \n            </div>\n        );\n    }\n}","/Users/burakyapici/Desktop/clone-project1-2048/src/components/GameNumber.js",["59"],"import React from \"react\";\nexport default class GameNumber extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return(\n            <div className={`gameNumber ${'gameNumber'+this.props.value}`} style={{left: `${this.props.location(this.props.col, this.props.row)[0]}px`, top: `${this.props.location(this.props.row, this.props.row)[1]}px`}}>\n                <span className={`number number${this.props.value}`}>{this.props.value}</span>\n            </div>\n        );\n    }\n}",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":13,"column":18,"nodeType":"66","messageId":"67","endLine":13,"endColumn":20},{"ruleId":"64","severity":1,"message":"65","line":15,"column":24,"nodeType":"66","messageId":"67","endLine":15,"endColumn":26},{"ruleId":"64","severity":1,"message":"65","line":17,"column":24,"nodeType":"66","messageId":"67","endLine":17,"endColumn":26},{"ruleId":"64","severity":1,"message":"65","line":19,"column":24,"nodeType":"66","messageId":"67","endLine":19,"endColumn":26},{"ruleId":"64","severity":1,"message":"65","line":42,"column":41,"nodeType":"66","messageId":"67","endLine":42,"endColumn":43},{"ruleId":"64","severity":1,"message":"68","line":68,"column":29,"nodeType":"66","messageId":"67","endLine":68,"endColumn":31},{"ruleId":"64","severity":1,"message":"65","line":70,"column":31,"nodeType":"66","messageId":"67","endLine":70,"endColumn":33},{"ruleId":"64","severity":1,"message":"68","line":74,"column":40,"nodeType":"66","messageId":"67","endLine":74,"endColumn":42},{"ruleId":"64","severity":1,"message":"68","line":74,"column":88,"nodeType":"66","messageId":"67","endLine":74,"endColumn":90},{"ruleId":"64","severity":1,"message":"68","line":94,"column":29,"nodeType":"66","messageId":"67","endLine":94,"endColumn":31},{"ruleId":"64","severity":1,"message":"65","line":96,"column":31,"nodeType":"66","messageId":"67","endLine":96,"endColumn":33},{"ruleId":"64","severity":1,"message":"68","line":101,"column":40,"nodeType":"66","messageId":"67","endLine":101,"endColumn":42},{"ruleId":"64","severity":1,"message":"68","line":101,"column":88,"nodeType":"66","messageId":"67","endLine":101,"endColumn":90},{"ruleId":"64","severity":1,"message":"68","line":121,"column":29,"nodeType":"66","messageId":"67","endLine":121,"endColumn":31},{"ruleId":"64","severity":1,"message":"65","line":123,"column":31,"nodeType":"66","messageId":"67","endLine":123,"endColumn":33},{"ruleId":"64","severity":1,"message":"68","line":128,"column":40,"nodeType":"66","messageId":"67","endLine":128,"endColumn":42},{"ruleId":"64","severity":1,"message":"68","line":128,"column":84,"nodeType":"66","messageId":"67","endLine":128,"endColumn":86},{"ruleId":"64","severity":1,"message":"68","line":148,"column":29,"nodeType":"66","messageId":"67","endLine":148,"endColumn":31},{"ruleId":"64","severity":1,"message":"65","line":150,"column":31,"nodeType":"66","messageId":"67","endLine":150,"endColumn":33},{"ruleId":"64","severity":1,"message":"68","line":155,"column":40,"nodeType":"66","messageId":"67","endLine":155,"endColumn":42},{"ruleId":"64","severity":1,"message":"68","line":155,"column":84,"nodeType":"66","messageId":"67","endLine":155,"endColumn":86},{"ruleId":"64","severity":1,"message":"68","line":170,"column":37,"nodeType":"66","messageId":"67","endLine":170,"endColumn":39},{"ruleId":"69","severity":1,"message":"70","line":206,"column":38,"nodeType":"71","messageId":"72","endLine":206,"endColumn":40},{"ruleId":"64","severity":1,"message":"68","line":207,"column":30,"nodeType":"66","messageId":"67","endLine":207,"endColumn":32},{"ruleId":"73","severity":1,"message":"74","line":5,"column":5,"nodeType":"75","messageId":"76","endLine":7,"endColumn":6},{"ruleId":"77","severity":1,"message":"78","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":18},{"ruleId":"73","severity":1,"message":"74","line":3,"column":5,"nodeType":"75","messageId":"76","endLine":5,"endColumn":6},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'GameNumber' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]